#include<stdio.h>
#include "tree_class.cc"
#include "string.h"
#include "stdlib.h"
using namespace std;

//int read_node_values(int **, const char *);

int main(int argc, char *argv[])
{
    tree T;
    int *h; 
    int *buffer;
    int i;
    if(argc != 2){
	printf("usage: %s filename\n", argv[0]);
	return 0;
    }

    int node_count = T.read_node_values(&buffer, argv[1]);
    if(node_count == -1)
	printf("Mentioned filename does not exist\n");
    for(i = 0; i < node_count; i++)
    {
        printf("%d\n", buffer[i]);
    }
    return 0;
}

/*
int tree::read_node_values(int **ret_buffer, const char *filename)
{

    FILE *fp;
    char c;
    int *buffer;
    int i;
    int node_count;
    fp = fopen(filename, "r");
    if(fp == NULL){
	return -1;
    }
    fseek(fp, SEEK_SET, 0);

    buffer = (int *)malloc(sizeof(int));

    i = 0;
    while(1){
	c = fgetc(fp);
	if(feof(fp)){
	    break;
	}
	if(c != '\n'){
	    buffer[i] = c-'0';
	    i++;
	    buffer = (int *)realloc(buffer, (i+1)*sizeof(int));
	}
    }
    buffer[i] = -1;
    node_count = i;
    *ret_buffer = buffer;
    fclose(fp);
    return node_count; 
}
*/
